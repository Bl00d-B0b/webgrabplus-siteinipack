**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: ntvplus.ru
* @MinSWversion: V3.1
* @Revision 5 - [13/09/2021] WGT*Mat8861_fix_ch_list
* @Revision 4 - [02/09/2020] WGT*Mat8861
*
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=ntvplus.ru|timezone=Europe/Moscow|maxdays=7|cultureinfo=ru-RU|charset=UTF-8|titlematchfactor=90|ratingsystem=RU|episodesystem=onscreen}
*
*   
scope.range{(urlindex)|end}         
url_index{url()|https://ntvplus.ru/tv/ajax/tv?genre=all&date=|urldate|&tz=0&search=&channel=##channel##&offset=0}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
urldate.format {datestring|dd.MM.yyyy}
index_temp_1.modify {substring(type=regex)|'config_site_id' "##(\d+)$"}
url_index.modify {replace|##channel##|'index_temp_1'}
end_scope
index_urlchannellogo.modify {substring(type=regex)|'config_site_id' "^(.*)##"}
index_urlchannellogo.modify {addstart(not "")|https://cdn.ntvplus.ru/files/image/}
*index_showsplit.scrub {multi(excludeblock="tv-schedule--item in-widget passed")|<div class="tv-schedule--item-time"|||}
index_showsplit.scrub {multi()|<div class="tv-schedule--item in-widget|||}
*index_showsplit.modify{(debug)}
*
scope.range{(indexshowdetails)|end}
index_start.scrub {regex||>(\d{2}:\d{2})</div>||}
index_title.scrub {single|class="tv-schedule--item-title">||</a>|</a>}
index_rating.scrub {single|class="tv-schedule--item-title">|(|)|</a>}
index_title.modify {remove(type=regex)|\s\(\d+\+\)}
index_title.modify {remove(type=regex)|\.\s(?:\d+-я\s[-и]\s)?\d+-я\s(?:серия\|серии).*$}
index_title.modify {remove(type=regex)|^.*?\.(\s\"[^\"]*\".*)$}
index_urlshow {url|https://ntvplus.ru/tv/review/|href="/tv/review/||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
index_urlshow.headers {customheader=upgrade-insecure-requests=1}
index_urlshow.headers {customheader=sec-fetch-dest=document}
index_urlshow.headers {customheader=sec-fetch-site=none}
index_urlshow.headers {customheader=sec-fetch-mode=navigate}
index_urlshow.headers {customheader=sec-fetch-user=?1}
end_scope
scope.range{(showdetails)|end}
title.modify {addstart|'index_title'}
**title.scrub {single|<h1 class="program--title">||</h1>|</h1>}
titleoriginal.scrub {single(lang=en)|<div class="program--desc">||</div>|</div>}
subtitle.scrub {single(separator=" - " include=last)|<h2 class="program--series-title">||</h2>|</h2>}
description.scrub {single|<div class="program--text">||</div>|</div>} 
description.scrub {single|<p class="program--text">||</p>|</p>} 
description.modify {cleanup(tags="<"">")} 
director.scrub {single(separator=", " max=2)|Режиссер</h3><div class="program--fields-value">|</div>|</div>}
director.scrub {single(separator=", " max=2)|Режиссеры</h3>|<div class="program--fields-value">|</div>|</div>}
actor.scrub {single(separator=", " max=10)|В ролях</h3>|">|</div>|</div>}
actor.scrub {single(separator=", " max=10)|Ведущие</h3>|">|</div>|</div>}
*producer.scrub {single(separator=", " max=2)|Производство</h3><div class="program--fields-value">||</div>|</div>}  *production
producer.scrub {single(separator=", " max=2)|Продюсеры</h3><div class="program--fields-value">||</div>|</div>}*ok
writer.scrub {single(separator=", " max=2)|Сценаристы</h3>|">|</div>|</div>}
writer.scrub {single(separator=", " max=2)|Сценарист</h3>|">|</div>|</div>}
composer.scrub {single(separator=", " max=2)|Композитор</h3>|<div class="program--fields-value">|</div>|</div>}
category.scrub {single(separator=", " max=2)|Тип</h3>|">|</div>|</div>}
country.scrub {single(separator=", " max=2)|Страна</h3>|">|</div>|</div>}
productiondate.scrub {single()|Год выпуска</h3>|">|</div>|</div>}
starrating.scrub {multi|<div class="program--rating-label">||</div></div>|</div></div>}
episode.scrub {single|<div class="program--desc">|<br />|</div>|</div>}
episode.scrub {single(pattern="'S1' сезон, 'E1'-я серия""'E1'-я серия""'S1' сезон" separator=" - " include=first "сезон""серия")|<h2 class="program--series-title">||</h2>|</h2>}
showicon.scrub {single|<div class="slide">|src="|"| />}
showicon.modify {addstart|https:}
*
*temp_9.scrub{multi(debug)||||}
*subtitle.modify {addstart('titleoriginal' ~"</div>")|'titleoriginal'}
temp_1.modify {substring(type=regex)|'subtitle' "^(\d+-я серия)(?:\s-\s\")?"} *subtitle may have episode number,only use it if its a single episode and not a episode range
subtitle.modify {clear('temp_1' not "")}
subtitle.modify {remove(type=regex)|,\s\d+-я.*$}
subtitle.modify {remove(type=regex)|\d+-я серия}
subtitle.modify {remove(type=regex)|я серия}
subtitle.modify {remove(type=regex)|\d+ сезон}
subtitle.modify {remove(type=regex)|\d+ сезон, \d+-я серия\s-\s}
subtitle.modify {remove(type=regex)|\d+\-я\s\w+\s-*\s}
subtitle.modify {cleanup(tags="<"">")}
subtitle.modify {cleanup(tags="/=\"")}
subtitle.modify {cleanup(tags="\"=/")}
subtitle.modify {replace|". "|,}
*titleoriginal.modify {clear(~ "</div>")}
*
episode.modify {remove(type=regex)|^\d+-я(\s-\s\d+-я)\sсерии}
episode.modify {replace|серии|серия}
episode.modify {remove(type=regex)|^.*<br />}
episode.modify {addstart("")|'temp_1'}
episode.modify {substring(type=regex pattern="'S1' сезон, 'E1'-я серия""'E1'-я серия")|"^.*$"}
starrating.modify {replace|</div><div class="program--rating-value">|:}
starrating.modify {remove(type=regex)|\s\(\d+\)}
starrating.modify {replace|\|| }
end_scope
**|class="channel--logo-svg"><img src="\/\/cdn\.ntvplus\.ru\/files\/image\/(\d+\/\d+\/\d+\/\-channel.*?data-favorite="\d+)"||
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://ntvplus.ru/tv/ajax/tv?genre=all&date=now&tz=0&search=&channel=&offset=|subpage|}
*subpage.format {list|0|30|60|90|120|150|180|210|240|270}
*index_site_id.scrub {multi()|<div class="channel-header--title">|<a href="#" data-toggle="tooltip" data-favorite="|"|}
*index_site_channel.scrub {multi|<div class="channel-header--title">|class="link--inherit">|</a>|</div>}
*index_temp_1.scrub {multi|<div class="channel-header--logo">|<img src="https://fast.ntvplus.tv/files/image/|" alt="|/div>} 
*scope.range{(channellist)|end}
*index_temp_2.modify {set|0}
*loop{(each "index_temp_9" in 'index_site_id')|end} 
*index_temp_8.modify {substring(type=element)|'index_temp_1' 'index_temp_2' 1} 
*index_temp_7.modify {addend|'index_temp_8'##'index_temp_9'#_#} 
*index_temp_2.modify {calculate(format=F0)|1 +}
*end_loop
*index_site_id.modify {set|'index_temp_7'}
*index_site_id.modify {replace|#_#|\|} 
*index_site_id.modify {remove(type=element)|-1 1} 
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end

